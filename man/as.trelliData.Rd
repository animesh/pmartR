% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as.trelliData.R
\name{as.trelliData}
\alias{as.trelliData}
\title{Generate an object from omicsData and/or statRes objects to pass to trelliscope building functions}
\usage{
as.trelliData(omicsData = NULL, statRes = NULL, ...)
}
\arguments{
\item{omicsData}{an object of the class 'pepData', 'isobaricpepData', proData', 
'metabData', 'lipidData', 'nmrData', created by as.pepData, as.isobaricpepData.
as.proData, as.metabData, as.lipidData, as.nmrData, respectively.}

\item{statRes}{statRes an object of the class 'statRes', created by \code{\link{summarize}}}
}
\description{
Either an omicsData and/or a statRes object is accepted. omicsData must
   be transformed and normalized, unless the data is isobaric protein or NMR data.
   Adding a "main_effects" group_desgination() will result in plots with groups. 
   The main effects group_designation and e_meta columns are merged to the e_data in long format to
   create the trelliData.omics dataframe, and e_meta is merged to statRes in long
   format to create trelliData.stat dataframe.
}
\examples{
\dontrun{
library(pmartR)
library(pmartRdata)

# Generate an example e_meta file for lipid data 
lipid_emeta <- data.frame("LipidCommonName" = lipid_edata_pos$LipidCommonName, 
  "LipidFamily" = lipid_edata_pos$LipidCommonName \%>\% as.character() \%>\% 
    strsplit("(", fixed = T) \%>\% lapply(function(el) {el[1]}) \%>\% unlist())
    
# Extend fdata to have two infection groups 
lipid_fdata_pos2 <- data.frame("Sample_Name" = lipid_fdata_pos$Sample_Name, 
  "Condition" = c(rep("Mock", 3), rep("Infection_A", 4), rep("Infection_B", 4)),
  "Weight" = runif(11))

# Build lipid data object
lipids <- as.lipidData(e_data = lipid_edata_pos, f_data = lipid_fdata_pos2, e_meta = lipid_emeta,
  edata_cname = "LipidCommonName", fdata_cname = "Sample_Name", 
  emeta_cname = "LipidCommonName")

# Transform the data
omicsData <- edata_transform(omicsData = lipids, data_scale = "log2")

# Group the data by condition
omicsData <- group_designation(omicsData = omicsData, main_effects = c("Condition"))

# Apply the IMD ANOVA filter
imdanova_Filt <- imdanova_filter(omicsData = omicsData)
omicsData <- applyFilt(filter_object = imdanova_Filt, omicsData = omicsData, min_nonmiss_anova=2)

# Normalize my pepData
omicsData <- normalize_global(omicsData, "subset_fn" = "all", "norm_fn" = "median", "apply_norm" = TRUE, "backtransform" = TRUE)

# Implement the IMD ANOVA method and compute all pairwise comparisons (i.e. leave the `comparisons` argument NULL)
statRes <- imd_anova(omicsData = omicsData, test_method = 'combined')

# Generate the trelliData object 
trelliData2 <- as.trelliData(omicsData = omicsData)
trelliData3 <- as.trelliData(statRes = statRes)   
trelliData4 <- as.trelliData(omicsData = omicsData, statRes = statRes)
}

}
\author{
David Degnan, Lisa Bramer
}
